{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/api/routes/index.js","webpack:///./src/config/index.js","webpack:///./src/config/passport/jwt.js","webpack:///./src/config/passport/local.js","webpack:///./src/graphql/resolvers/artist.js","webpack:///./src/graphql/resolvers/index.js","webpack:///./src/graphql/resolvers/playlist.js","webpack:///./src/graphql/resolvers/song.js","webpack:///./src/graphql/schema/artist.js","webpack:///./src/graphql/schema/index.js","webpack:///./src/graphql/schema/playlist.js","webpack:///./src/graphql/schema/song.js","webpack:///./src/index.js","webpack:///./src/models/artist.js","webpack:///./src/models/playlist.js","webpack:///./src/models/song.js","webpack:///./src/models/user.js","webpack:///./src/servers/apollo.js","webpack:///./src/servers/database.js","webpack:///./src/servers/express.js","webpack:///./src/servers/index.js","webpack:///./src/utilities/logger.js","webpack:///external \"apollo-server-express\"","webpack:///external \"bcrypt\"","webpack:///external \"body-parser\"","webpack:///external \"cors\"","webpack:///external \"dotenv\"","webpack:///external \"express\"","webpack:///external \"helmet\"","webpack:///external \"jsonwebtoken\"","webpack:///external \"mongoose\"","webpack:///external \"mongoose-autopopulate\"","webpack:///external \"passport\"","webpack:///external \"passport-jwt\"","webpack:///external \"passport-local\"","webpack:///external \"path\"","webpack:///external \"winston\""],"names":["app","passport","get","req","res","send","message","post","next","authenticate","err","user","token","jwt","sign","toJSON","config","jwtSecret","status","session","dotenv","port","process","env","PORT","root","path","resolve","__dirname","dbHost","DB_HOST","JWT_SECRET","mongo","options","useCreateIndex","useNewUrlParser","useUnifiedTopology","jwtFromRequest","ExtractJwt","fromAuthHeaderAsBearerToken","secretOrKey","strategy","Strategy","payload","done","User","findById","_id","catch","logger","error","login","usernameField","passwordField","username","password","findOne","verified","verifyPassword","Query","artists","Artist","find","artist","_","songs","playlistResolvers","artistResolvers","songResolvers","playlist","Playlist","playlists","Song","populate","song","gql","schema","songSchema","artistSchema","playlistSchema","express","server","start","servers","listen","info","Schema","mongoose","name","type","String","required","Types","ObjectId","ref","autopopulate","plugin","model","id","Number","unique","title","genre","playcount","favourite","Boolean","userSchema","email","select","created_at","Date","updated_at","pre","isModified","bcrypt","hashSync","methods","plain","cipher","comparison","compare","ApolloServer","introspection","typeDefs","resolvers","formatError","replace","connect","use","local","helmet","cors","bodyParser","urlencoded","extended","json","routes","loader","apollo","applyMiddleware","combine","colorize","simple","format","createLogger","level","transports","File","filename","add","Console"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import jwt from 'jsonwebtoken';\nimport config from '../../config';\n\nexport default ((app, passport) => {\n  app.get('/', (req, res) => {\n    res.send({ message: 'Hello world' });\n  });\n\n  app.get('/login', (req, res) => {\n    res.send({ message: 'Cool beans' });\n  });\n\n  app.post('/login', (req, res, next) => {\n    passport.authenticate('local', (err, user) => {\n      if (err) return next(err);\n      if (!user) res.send({ message: 'Failed to sign in' });\n      const token = jwt.sign(user.toJSON(), config.jwtSecret);\n      return res.status(201)\n        .send({ message: 'Success', user, token });\n    })(req, res, next);\n  });\n\n  app.get('/paywall', (req, res, next) => {\n    passport.authenticate('jwt', { session: false }, (err, user) => {\n      if (err) return next(err);\n      return res.status(201)\n        .send({ message: 'Success', user });\n    })(req, res, next);\n  });\n});\n","import path from 'path';\nimport dotenv from 'dotenv';\n\ndotenv.config();\n\nexport default {\n  port: process.env.PORT || 4000,\n  root: path.resolve(__dirname, '../', '../'),\n  dbHost: process.env.DB_HOST,\n  jwtSecret: process.env.JWT_SECRET,\n  mongo: {\n    options: {\n      useCreateIndex: true,\n      useNewUrlParser: true,\n      useUnifiedTopology: true,\n    },\n  },\n};\n","import { Strategy, ExtractJwt } from 'passport-jwt';\nimport User from '../../models/user';\nimport config from '../index';\nimport logger from '../../utilities/logger';\n\nconst options = {\n  jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n  secretOrKey: config.jwtSecret,\n};\n\nconst strategy = new Strategy(\n  options,\n  async (payload, done) => {\n    const user = await User.findById(payload._id)\n      .catch((err) => logger.error(err));\n    if (!user) return done(null, false);\n    return done(null, user);\n  },\n);\n\nexport default strategy;\n","import Strategy from 'passport-local';\nimport User from '../../models/user';\n\nconst login = new Strategy(\n  {\n    usernameField: 'username',\n    passwordField: 'password',\n    session: false,\n  },\n  async (username, password, done) => {\n    const user = await User.findOne({ username })\n      .catch((err) => done(err));\n    if (!user) return done(null, false);\n    const verified = user.verifyPassword(password, user.password);\n    if (!verified) return done(null, false);\n    return done(null, user);\n  },\n);\n\nexport default login;\n","import Artist from '../../models/artist';\n\nexport default {\n\n  Query: {\n    artists: async () => Artist.find({}),\n    artist: async (_, { _id }) => Artist.findById({ _id }),\n  },\n\n  Artist: {\n    songs: ({ songs }) => songs,\n  },\n\n};\n","import playlistResolvers from './playlist';\nimport artistResolvers from './artist';\nimport songResolvers from './song';\n\nexport default [\n  playlistResolvers,\n  artistResolvers,\n  songResolvers,\n];\n","import Playlist from '../../models/playlist';\n\nexport default {\n\n  Query: {\n    playlist: async (_, { _id }) => Playlist.findById({ _id }),\n    playlists: async () => Playlist.find({}),\n  },\n\n  Playlist: {\n    songs: ({ songs }) => songs,\n  },\n\n};\n","import Song from '../../models/song';\n\nexport default {\n\n  Query: {\n    songs: async () => Song.find({}).populate(),\n    song: async (_, { _id }) => Song.findById({ _id }).populate(),\n  },\n\n  Song: {\n    artist: ({ artist }) => artist,\n  },\n\n};\n","import { gql } from 'apollo-server-express';\n\nexport default gql`\n\n  extend type Query {\n    artists: [Artist]\n    artist(_id: String): Artist\n  }\n\n  type Artist {\n    _id: String,\n    name: String,\n    songs: [Song]\n  }\n\n`;\n","import { gql } from 'apollo-server-express';\nimport playlistSchema from './playlist';\nimport artistSchema from './artist';\nimport songSchema from './song';\n\nconst schema = gql`\n\n  type Query {\n    hello: String\n  }\n\n`;\n\nexport default [schema, songSchema, artistSchema, playlistSchema];\n","import { gql } from 'apollo-server-express';\n\nexport default gql`\n\n  extend type Query {\n    playlists: [Playlist]\n    playlist(_id: String): Playlist\n  }\n\n  type Playlist {\n    _id: String,\n    name: String,\n    songs: [Song]\n  }\n\n`;\n","import { gql } from 'apollo-server-express';\n\nexport default gql`\n\n  extend type Query {\n    songs: [Song],\n    song(_id: String): Song,\n  }\n\n  type Song {\n    _id: String,\n    title: String,\n    artist: Artist,\n    genre: String,\n    playcount: Int,\n    favourite: Boolean\n  }\n\n`;\n","import express from 'express';\nimport passport from 'passport';\nimport logger from './utilities/logger';\nimport servers from './servers';\nimport config from './config';\n\nconst app = express();\n\nconst server = {\n  start: async () => {\n    servers(app, passport, config);\n    app.listen(config.port, () => {\n      logger.info(\n        `App started on http://localhost:${config.port}`,\n      );\n    });\n  },\n};\n\nserver.start();\n","import mongoose from 'mongoose';\nimport populate from 'mongoose-autopopulate';\n\nconst { Schema } = mongoose;\n\nconst artistSchema = new Schema({\n  name: {\n    type: String,\n    required: true,\n  },\n  songs: [\n    {\n      type: Schema.Types.ObjectId,\n      ref: 'Song',\n      autopopulate: true,\n    },\n  ],\n});\n\nartistSchema.plugin(populate);\n\nexport default mongoose.model('Artist', artistSchema);\n","import mongoose from 'mongoose';\nimport populate from 'mongoose-autopopulate';\n\nconst { Schema } = mongoose;\n\nconst playlistSchema = new Schema({\n  id: {\n    type: Number,\n    required: true,\n    unique: true,\n  },\n  name: {\n    type: String,\n    required: true,\n  },\n  songs: [\n    {\n      type: Schema.Types.ObjectId,\n      ref: 'Song',\n      autopopulate: true,\n    },\n  ],\n});\n\nplaylistSchema.plugin(populate);\n\nexport default mongoose.model('Playlist', playlistSchema);\n","import mongoose from 'mongoose';\nimport populate from 'mongoose-autopopulate';\n\nconst { Schema } = mongoose;\n\nconst songSchema = new Schema({\n  title: {\n    type: String,\n    required: true,\n  },\n  artist: {\n    type: Schema.Types.ObjectId,\n    ref: 'Artist',\n    autopopulate: true,\n  },\n  genre: String,\n  playcount: Number,\n  favourite: Boolean,\n});\n\nsongSchema.plugin(populate);\n\nexport default mongoose.model('Song', songSchema);\n","import mongoose from 'mongoose';\nimport bcrypt from 'bcrypt';\nimport logger from '../utilities/logger';\n\nconst { Schema } = mongoose;\n\nconst userSchema = new Schema({\n  username: {\n    type: String,\n    required: true,\n  },\n  name: {\n    type: String,\n  },\n  email: {\n    type: String,\n  },\n  password: {\n    type: String,\n    required: true,\n    select: false,\n  },\n  created_at: Date,\n  updated_at: Date,\n});\n\nuserSchema.pre('save', (next) => {\n  if (!this.isModified('password')) return next();\n  this.password = bcrypt.hashSync(this.password, 10);\n  return next();\n});\n\nuserSchema.methods.verifyPassword = (async (plain, cipher) => {\n  const comparison = await bcrypt.compare(plain, cipher)\n    .catch((err) => logger.error(err));\n  return comparison;\n});\n\nexport default mongoose.model('User', userSchema);\n","import { ApolloServer } from 'apollo-server-express';\nimport typeDefs from '../graphql/schema';\nimport resolvers from '../graphql/resolvers';\n\nexport default new ApolloServer({\n  introspection: true,\n  typeDefs,\n  resolvers,\n  formatError: (error) => {\n    const message = error.message\n      .replace('SequelizeValidationError: ', '')\n      .replace('Validation error: ', '');\n    return {\n      ...error,\n      message,\n    };\n  },\n});\n","import mongoose from 'mongoose';\n\nconst connect = async ({ config }) => {\n  const options = {\n    useCreateIndex: true,\n    useNewUrlParser: true,\n    useUnifiedTopology: true,\n  };\n  return mongoose.connect(config.dbHost, options);\n};\n\nexport default connect;\n","import bodyParser from 'body-parser';\nimport helmet from 'helmet';\nimport cors from 'cors';\nimport local from '../config/passport/local';\nimport jwt from '../config/passport/jwt';\nimport routes from '../api/routes';\n\nexport default async (app, passport) => {\n  passport.use(local);\n  passport.use(jwt);\n\n  app.use(helmet());\n\n  app.use(cors());\n\n  app.use(\n    bodyParser.urlencoded({\n      extended: true,\n    }),\n  );\n\n  app.use(bodyParser.json());\n\n  routes(app, passport);\n};\n","import express from './express';\nimport apollo from './apollo';\nimport connect from './database';\n\nconst loader = async (app, passport, config) => {\n  await connect({ config });\n  await express(app, passport);\n  apollo.applyMiddleware({ app, path: '/graphql' });\n};\n\nexport default loader;\n","import { createLogger, transports, format } from 'winston';\n\nconst { combine, colorize, simple, json } = format;\n\nconst logger = createLogger({\n  level: 'silly',\n  format: json(),\n  transports: [\n    new transports.File({ filename: 'error.log', level: 'error' }),\n    new transports.File({ filename: 'combined.log' }),\n  ],\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  logger.add(new transports.Console({\n    format: combine(\n      colorize(),\n      simple(),\n    ),\n  }));\n}\n\nexport default logger;\n","module.exports = require(\"apollo-server-express\");","module.exports = require(\"bcrypt\");","module.exports = require(\"body-parser\");","module.exports = require(\"cors\");","module.exports = require(\"dotenv\");","module.exports = require(\"express\");","module.exports = require(\"helmet\");","module.exports = require(\"jsonwebtoken\");","module.exports = require(\"mongoose\");","module.exports = require(\"mongoose-autopopulate\");","module.exports = require(\"passport\");","module.exports = require(\"passport-jwt\");","module.exports = require(\"passport-local\");","module.exports = require(\"path\");","module.exports = require(\"winston\");"],"sourceRoot":""}