{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/data/resolvers.js","webpack:///./src/data/schema.js","webpack:///./src/index.js","webpack:///external \"apollo-server-express\"","webpack:///external \"body-parser\"","webpack:///external \"express\"","webpack:///external \"lodash\""],"names":["songs","id","title","artist","artists","name","Query","hello","song","_","find","Artist","filter","Song","gql","app","express","server","ApolloServer","typeDefs","resolvers","applyMiddleware","port","process","env","PORT","listen","console","log"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { find, filter } from 'lodash';\n\nconst songs =  [\n    {\n        id: 1,\n        title: 'Piano Sonata No. 3',\n        artist: 'Beethoven'\n    },\n    {\n        id: 2,\n        title: 'Piano Sonata No. 7',\n        artist: 'Beethoven'\n    },\n    {\n        id: 3,\n        title: 'Piano Sonata No. 10',\n        artist: 'Beethoven'\n    },\n    {\n        id: 4,\n        title: 'Fur Elize',\n        artist: 'Motzart'\n    }\n];\n\nconst artists = [\n    { \n        id: 1,\n        name:  'Beethoven' \n    },\n    { \n        id: 2,\n        name:  'Motzart' \n    },\n];\n\nexport default {\n    Query: {\n        hello: () => 'Hello world!',\n        song: (_, { id }) => find(songs, { id }),\n        artist: (_, { id }) => find(artists, { id })\n    },\n\n    Artist: {\n        songs: artist => filter(songs, { artist: artist.name })\n    },\n\n    Song: {\n        artist: song => find(artists, { name: song.artist })\n    }\n\n};\n","import { gql } from 'apollo-server-express';\n\nexport default gql`\n    type Query {\n        hello: String,\n        song(id: Int!): Song,\n        artist(id: Int!): Artist\n    }\n\n    type Song {\n        id: Int!,\n        title: String,\n        artist: Artist\n    }\n\n    type Artist {\n        id: Int!,\n        name: String,\n        songs: [Song]\n    }\n`;\n\n","import express  from 'express';\nimport bodyParser from 'body-parser';\nimport { ApolloServer } from 'apollo-server-express';\nimport typeDefs from './data/schema';\nimport resolvers from './data/resolvers';\n\nconst app = express();\n\nconst server = new ApolloServer({ typeDefs, resolvers });\n\nserver.applyMiddleware({ app });\n\nconst port  = process.env.PORT || 4000;\n\napp.listen(port, () => {\n    console.log(`Listening on http:localhost:${port}`)\n})","module.exports = require(\"apollo-server-express\");","module.exports = require(\"body-parser\");","module.exports = require(\"express\");","module.exports = require(\"lodash\");"],"sourceRoot":""}