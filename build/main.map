{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/config/apollo.js","webpack:///./src/config/config.js","webpack:///./src/config/express.js","webpack:///./src/config/logger.js","webpack:///./src/graphql/resolvers/artist.js","webpack:///./src/graphql/resolvers/index.js","webpack:///./src/graphql/resolvers/playlist.js","webpack:///./src/graphql/resolvers/song.js","webpack:///./src/graphql/schema/artist.js","webpack:///./src/graphql/schema/index.js","webpack:///./src/graphql/schema/playlist.js","webpack:///./src/graphql/schema/song.js","webpack:///./src/index.js","webpack:///./src/models/artist.js","webpack:///./src/models/index.js","webpack:///./src/models/playlist.js","webpack:///./src/models/song.js","webpack:///external \"apollo-server-express\"","webpack:///external \"body-parser\"","webpack:///external \"envy\"","webpack:///external \"express\"","webpack:///external \"helmet\"","webpack:///external \"mongoose\"","webpack:///external \"mongoose-autopopulate\"","webpack:///external \"path\"","webpack:///external \"winston\""],"names":["ApolloServer","introspection","typeDefs","resolvers","formatError","error","message","replace","root","path","resolve","__dirname","options","public","join","mongo","useCreateIndex","useNewUrlParser","useUnifiedTopology","config","envy","app","use","helmet","express","static","bodyParser","urlencoded","extended","json","combine","colorize","simple","format","logger","createLogger","level","transports","File","filename","process","add","Console","Query","artists","artist","find","_","_id","findById","Artist","songs","playlistResolvers","artistResolvers","songResolvers","playlist","playlists","Playlist","song","populate","Song","gql","schema","songSchema","artistSchema","playlistSchema","port","connect","mongoose","dbHost","connection","listen","get","info","bootstrap","server","applyMiddleware","on","err","Schema","name","type","String","required","Types","ObjectId","ref","autopopulate","plugin","model","id","Number","unique","title","genre","playcount","favourite","Boolean"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { ApolloServer } from 'apollo-server-express';\nimport typeDefs from '../graphql/schema';\nimport resolvers from '../graphql/resolvers';\n\nexport default new ApolloServer({\n  introspection: true,\n  typeDefs,\n  resolvers,\n  formatError: (error) => {\n    const message = error.message\n      .replace('SequelizeValidationError: ', '')\n      .replace('Validation error: ', '');\n    return {\n      ...error,\n      message,\n    };\n  },\n});\n","import envy from 'envy';\nimport path from 'path';\n\nconst root = path.resolve(__dirname, '../', '../');\n\nconst options = {\n  root,\n  public: path.join(root, '/public'),\n  mongo: {\n    options: {\n      useCreateIndex: true,\n      useNewUrlParser: true,\n      useUnifiedTopology: true,\n    },\n  },\n};\n\nconst config = { ...options, ...envy() };\n\nexport default config;\n","import express from 'express';\nimport bodyParser from 'body-parser';\nimport helmet from 'helmet';\nimport config from './config';\n\nexport default (app) => {\n  app.use(helmet());\n\n  app.use(express.static(config.public));\n\n  app.use(\n    bodyParser.urlencoded({\n      extended: true,\n    }),\n  );\n\n  app.use(bodyParser.json());\n};\n","import { createLogger, transports, format } from 'winston';\n\nconst { combine, colorize, simple, json } = format;\n\nconst logger = createLogger({\n  level: 'debug',\n  format: json(),\n  transports: [\n    new transports.File({ filename: 'error.log', level: 'error' }),\n    new transports.File({ filename: 'combined.log' }),\n  ],\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  logger.add(new transports.Console({\n    format: combine(\n      colorize(),\n      simple(),\n    ),\n  }));\n}\n\nexport default logger;\n","import { artist } from '../../models';\n\nexport default {\n\n  Query: {\n    artists: async () => artist.find({}),\n    artist: async (_, { _id }) => artist.findById({ _id }),\n  },\n\n  Artist: {\n    songs: ({ songs }) => songs,\n  },\n\n};\n","import playlistResolvers from './playlist';\nimport artistResolvers from './artist';\nimport songResolvers from './song';\n\nexport default [\n  playlistResolvers,\n  artistResolvers,\n  songResolvers,\n];\n","import { playlist } from '../../models';\n\nexport default {\n\n  Query: {\n    playlist: async (_, { _id }) => playlist.findById({ _id }),\n    playlists: async () => playlist.find({}),\n  },\n\n  Playlist: {\n    songs: ({ songs }) => songs,\n  },\n\n};\n","import { song } from '../../models';\n\nexport default {\n\n  Query: {\n    songs: async () => song.find({}).populate(),\n    song: async (_, { _id }) => song.findById({ _id }).populate(),\n  },\n\n  Song: {\n    artist: ({ artist }) => artist,\n  },\n\n};\n","import { gql } from 'apollo-server-express';\n\nexport default gql`\n\n  extend type Query {\n    artists: [Artist]\n    artist(_id: String): Artist\n  }\n\n  type Artist {\n    _id: String,\n    name: String,\n    songs: [Song]\n  }\n\n`;\n","import { gql } from 'apollo-server-express';\nimport playlistSchema from './playlist';\nimport artistSchema from './artist';\nimport songSchema from './song';\n\nconst schema = gql`\n\n  type Query {\n    hello: String\n  }\n\n`;\n\nexport default [schema, songSchema, artistSchema, playlistSchema];\n","import { gql } from 'apollo-server-express';\n\nexport default gql`\n\n  extend type Query {\n    playlists: [Playlist]\n    playlist(_id: String): Playlist\n  }\n\n  type Playlist {\n    _id: String,\n    name: String,\n    songs: [Song]\n  }\n\n`;\n","import { gql } from 'apollo-server-express';\n\nexport default gql`\n\n  extend type Query {\n    songs: [Song],\n    song(_id: String): Song,\n  }\n\n  type Song {\n    _id: String,\n    title: String,\n    artist: Artist,\n    genre: String,\n    playcount: Int,\n    favourite: Boolean\n  }\n\n`;\n","import express from 'express';\nimport mongoose from 'mongoose';\nimport server from './config/apollo';\n// import connect from './config/connection';\nimport config from './config/config';\nimport logger from './config/logger';\nimport bootstrap from './config/express';\n\nconst app = express();\nconst port = config.port || 4000;\n\nconst connect = () => {\n  mongoose.connect(config.dbHost, config.mongo.options);\n  return mongoose.connection;\n};\n\nconst listen = () => {\n  if (app.get('env') === 'test') return;\n  app.listen(port);\n  logger.info(\n    `App started on http://localhost:${port}`,\n  );\n};\n\nconst connection = connect();\n\nbootstrap(app);\n\nserver.applyMiddleware({ app, path: '/graphql' });\n\nconnection\n  .on('error', (err) => logger.error(err))\n  .on('disconnected', connect)\n  .on('open', listen);\n","import mongoose from 'mongoose';\nimport populate from 'mongoose-autopopulate';\n\nconst { Schema } = mongoose;\n\nconst artistSchema = new Schema({\n  name: {\n    type: String,\n    required: true,\n  },\n  songs: [\n    {\n      type: Schema.Types.ObjectId,\n      ref: 'Song',\n      autopopulate: true,\n    },\n  ],\n});\n\nartistSchema.plugin(populate);\n\nconst Artist = mongoose.model('Artist', artistSchema);\n\nexport default Artist;\n","import playlist from './playlist';\nimport artist from './artist';\nimport song from './song';\n\nexport { song, playlist, artist };\n","import mongoose from 'mongoose';\nimport populate from 'mongoose-autopopulate';\n\nconst { Schema } = mongoose;\n\nconst playlistSchema = new Schema({\n  id: {\n    type: Number,\n    required: true,\n    unique: true,\n  },\n  name: {\n    type: String,\n    required: true,\n  },\n  songs: [\n    {\n      type: Schema.Types.ObjectId,\n      ref: 'Song',\n      autopopulate: true,\n    },\n  ],\n});\n\nplaylistSchema.plugin(populate);\n\nconst Playlist = mongoose.model('Playlist', playlistSchema);\n\nexport default Playlist;\n","import mongoose from 'mongoose';\nimport populate from 'mongoose-autopopulate';\n\nconst { Schema } = mongoose;\n\nconst songSchema = new Schema({\n  title: {\n    type: String,\n    required: true,\n  },\n  artist: {\n    type: Schema.Types.ObjectId,\n    ref: 'Artist',\n    autopopulate: true,\n  },\n  genre: String,\n  playcount: Number,\n  favourite: Boolean,\n});\n\nsongSchema.plugin(populate);\n\nconst Song = mongoose.model('Song', songSchema);\n\nexport default Song;\n","module.exports = require(\"apollo-server-express\");","module.exports = require(\"body-parser\");","module.exports = require(\"envy\");","module.exports = require(\"express\");","module.exports = require(\"helmet\");","module.exports = require(\"mongoose\");","module.exports = require(\"mongoose-autopopulate\");","module.exports = require(\"path\");","module.exports = require(\"winston\");"],"sourceRoot":""}