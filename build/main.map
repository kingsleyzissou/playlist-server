{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/apollo/server.js","webpack:///./src/config/index.js","webpack:///./src/database/connect.js","webpack:///./src/graphql/resolvers/artist.js","webpack:///./src/graphql/resolvers/index.js","webpack:///./src/graphql/resolvers/playlist.js","webpack:///./src/graphql/resolvers/song.js","webpack:///./src/graphql/schema/artist.js","webpack:///./src/graphql/schema/index.js","webpack:///./src/graphql/schema/playlist.js","webpack:///./src/graphql/schema/song.js","webpack:///./src/index.js","webpack:///./src/models/artist.js","webpack:///./src/models/playlist.js","webpack:///./src/models/song.js","webpack:///external \"apollo-server-express\"","webpack:///external \"envy\"","webpack:///external \"express\"","webpack:///external \"mongoose\"","webpack:///external \"mongoose-autopopulate\""],"names":["server","ApolloServer","introspection","typeDefs","resolvers","formatError","error","message","replace","config","envy","options","useCreateIndex","useNewUrlParser","useUnifiedTopology","mongoose","connect","dbHost","Query","artists","artist","find","_","_id","findById","Artist","songs","playlistResolvers","artistResolvers","songResolvers","playlist","playlists","Playlist","song","Song","gql","schema","songSchema","artistSchema","playlistSchema","app","express","applyMiddleware","port","listen","console","log","graphqlPath","Schema","name","type","String","required","Types","ObjectId","ref","autopopulate","plugin","populate","model","id","Number","unique","title","genre","playcount","favourite","Boolean"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { ApolloServer } from 'apollo-server-express';\nimport typeDefs from '../graphql/schema';\nimport resolvers from '../graphql/resolvers';\n\nconst server = new ApolloServer({\n    introspection: true,\n    typeDefs,\n    resolvers,\n    formatError: error => {\n        // remove the internal sequelize error message\n        // leave only the important validation error\n        const message = error.message\n            .replace('SequelizeValidationError: ', '')\n            .replace('Validation error: ', '');\n\n        return {\n            ...error,\n            message,\n        };\n    }\n});\n\nexport default server;","import envy from 'envy';\n\nconst config = envy();\n\nexport default config;","import mongoose from  'mongoose';\nimport config from '../config';\n\nexport default () => {\n    let options = {\n        useCreateIndex: true,\n        useNewUrlParser: true,\n        useUnifiedTopology: true\n    }\n    mongoose.connect(config.dbHost, options);\n}\n\n\n\n","import artist from '../../models/artist';\n\nexport default {\n\n    Query: {\n        artists: async () => \n            await artist.find({}),\n        artist: async (_, { _id }) =>\n            await artist.findById({ _id })\n    },\n\n    Artist: {\n        songs: ({ songs }) => songs\n    }\n\n};\n","import playlistResolvers from './playlist';\nimport artistResolvers from  './artist';\nimport songResolvers from './song';\n\nexport default [\n    playlistResolvers,\n    artistResolvers,\n    songResolvers\n]","import playlist from '../../models/playlist';\n\nexport default {\n\n    Query: {\n        playlist: async (_, { _id }) =>\n            await playlist.findById({ _id }),\n        playlists: async () => \n            await playlist.find({})\n    },\n\n    Playlist: {\n        songs: ({ songs }) => songs\n    }\n\n};\n","import song from '../../models/song';\n\nexport default {\n\n    Query: {\n        songs: async () => \n            await song.find({}),\n        song: async (_, { _id }) => \n            await song.findById({ _id })\n    },\n\n    Song: {\n        artist: ({ artist }) => artist\n    }\n\n};\n","import { gql } from 'apollo-server-express';\n\nexport default gql`\n\n    extend type Query {\n        artists: [Artist]\n        artist(_id: String): Artist\n    }\n\n    type Artist {\n        _id: String,\n        name: String,\n        songs: [Song]\n    }\n\n`;","import { gql } from 'apollo-server-express';\nimport playlistSchema from './playlist';\nimport artistSchema from './artist';\nimport songSchema from './song';\n\nconst schema =  gql`\n\n    type Query {\n        hello: String\n    }\n\n`;\n\nexport default [ schema, songSchema, artistSchema, playlistSchema ]","import { gql } from 'apollo-server-express';\n\nexport default gql`\n\n    extend type Query {\n        playlists: [Playlist]\n        playlist(_id: String): Playlist\n    }\n\n    type Playlist {\n        _id: String,\n        name: String,\n        songs: [Song]\n    }\n\n`;","import { gql } from 'apollo-server-express';\n\nexport default gql`\n\n    extend type Query {\n        songs: [Song],\n        song(_id: String): Song,\n    }\n\n    type Song {\n        _id: String,\n        title: String,\n        artist: Artist,\n        genre: String,\n        playcount: Int,\n        favourite: Boolean\n    }\n\n`;","import express from 'express';\nimport server from './apollo/server';\nimport connect from './database/connect';\nimport config from './config';\n\nconst app = express();\n\nconnect();\n\nserver.applyMiddleware({ app });\n\nconst port = config.port || 4000;\n\napp.listen(port, () => {\n    console.log(`Listening on http://localhost:${port}${server.graphqlPath}`);\n});","import mongoose from 'mongoose';\nimport populate from 'mongoose-autopopulate';\n\nconst Schema = mongoose.Schema;\n\nconst artistSchema = new Schema({\n    name: {\n        type: String,\n        required: true\n    },\n    songs: [\n        {\n            type: Schema.Types.ObjectId,\n            ref: 'Song',\n            autopopulate: true\n        }\n    ]\n});\n\nartistSchema.plugin(populate);\n\nconst Artist = mongoose.model('Artist', artistSchema);\n\nexport default Artist;","import mongoose from 'mongoose';\nimport populate from 'mongoose-autopopulate';\n\nconst Schema = mongoose.Schema;\n\nconst playlistSchema = new Schema({\n    id: {\n        type: Number,\n        required: true,\n        unique: true\n    },\n    name: {\n        type: String,\n        required: true\n    },\n    songs: [\n        {\n            type: Schema.Types.ObjectId,\n            ref: 'Song',\n            autopopulate: true\n        }\n    ]\n});\n\nplaylistSchema.plugin(populate);\n\nconst Playlist = mongoose.model('Playlist', playlistSchema);\n\nexport default Playlist;","import mongoose from 'mongoose';\nimport populate from 'mongoose-autopopulate';\n\nconst Schema = mongoose.Schema;\n\nconst songSchema = new Schema({\n    title: {\n        type: String,\n        required: true\n    },\n    artist:  {\n        type: Schema.Types.ObjectId,\n        ref:'Artist',\n        autopopulate: true\n    },\n    genre: String,\n    playcount: Number,\n    favourite: Boolean\n});\n\nsongSchema.plugin(populate);\n\nconst Song = mongoose.model('Song', songSchema);\n\nexport default Song;","module.exports = require(\"apollo-server-express\");","module.exports = require(\"envy\");","module.exports = require(\"express\");","module.exports = require(\"mongoose\");","module.exports = require(\"mongoose-autopopulate\");"],"sourceRoot":""}